
//pico_quack_grammar

start: statement+

statement: assignment | if_statement | while_statement

assignment: IDENT ":" TYPE "=" expr ";"

expr: term 
      | expr "+" term -> add
      | expr "-" term -> sub 
      | expr "*" term -> mul
      | expr "/" term -> div
      | expr ">" term -> gt
      | expr "<" term -> lt
      | expr ">=" term -> gte
      | expr "<=" term -> lte
      | expr "==" term -> eq
      | expr "!=" term -> neq
      | expr "&&" term -> and_op
      | expr "||" term -> or_op
      | "!" expr -> not_op
      | call

term: INT      -> int
      | FLOAT     -> float
      | STRING    -> string
      | "true"    -> true 
      | "false"   -> false
      | IDENT     -> var

call: IDENT "." IDENT "(" (expr ("," expr)*)? ")"
if_statement: "if" "(" expr ")" block ("else" block)?
while_statement: "while" "(" expr ")" block

block: "{" assignment* "}"

IDENT: /[_a-zA-Z][_a-zA-Z0-9]*/
TYPE: "Int" | "Float" | "String" | "Bool"

%import common.NEWLINE
%import common.WS
%import common.INT
%import common.FLOAT
%import common.ESCAPED_STRING -> STRING

%ignore WS
%ignore NEWLINE

